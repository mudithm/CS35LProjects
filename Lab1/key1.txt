Name:	Mudith Mallajosyula
ID:	404937201
Lab:	Lab 2	


1.1
---

2. C-s H T M L M-f

3. C-s s c a v e n g e r M-b

4. C-s s e l f - r e f e r e n t i a l M-b

5. C-s a r r o w M-b

6. C-e

7. C-a

10. C-x C-s C-x C-c


1.2
---

2-5. C-M-% < ! - - [ ^ = ] * [ = ] * - - > Enter Enter y y y n y
     C-r < ! - - C-a C-SP C-n C-n C-n C-n Backspace
     C-r < ! - - ENTER C-SP C-M-f C-f Backspace

     C-x C-s C-s C-c
     d i f f SP - u SP e x e r 1 . h t m l SP e x e r 2 . h t m l SP > e x e r 2 . d i f f


1.3
---

2. C-s A s s i g n m e n t 1 M-% A s s i g n m e n t 4 2 Enter y y Enter

3. M-< C-s U T F - 8 M-% U S - A S C I I Enter y Enter

4. M-< C-M-% [ ^ [ : a s c i i : ] ] Enter Enter !

5. M-< C-s < / o l > C-o

6. C-x C-s C-x C-c

   d i f f SP - u SP e x e r 1 . h t m l SP e x e r 3 . h t m l SP > e x e r 3 . d i f f


1.4
---
1. c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l

3. M-> C-r < ! - - Enter C-SP C-e M-w
   C-r < / h t m l > C-r C-n C-y

4. M-> C-r < ! - - Enter C-r C-SP C-n C-n C-n C-e M-w
   C-r < p > s h o u l d C-r C-n C-y Enter C-p C-d C-p C-d C-p C-d 

   M-> C-r < ! - - Enter C-r C-r C-SP C-M-f C-f M-w
   C-r < p > s h o u l d Enter C-r M-f M-f M-f M-f C-y

   M-> C-r < ! - - Enter C-r C-r C-r C-SP C-n C-n C-e M-w
   C-r < h 2 > S u b m i t C-r C-n C-n C-y C-a C-d C-p C-d

   M-> C-r < ! - - Enter C-r C-r C-r C-r C-SP C-e M-w
   C-r < h 2 > H o m e w o r k C-r C-n C-n C-y

   M-> C-r < ! - - Enter C-r C-r C-r C-r C-r C-SP C-n C-e M-w
   C-r < h 2 > L a b o r a t o r y C-r C-n C-n C-y

5. M-> C-r - - - SP e x e r 1 C-SP M-> Backspace

6. C-x u

7. C-r - - - e x e r 1 Enter < ! - - Enter
   C-s - - > M-% Enter ! C-n SP - - >

8. M-< C-s < o l > M-% < o L > Enter !

   (There were 7 instances of <ol>).

9. d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l SP > e x e r 4 . d i f f


1.5
---

1. M-x m a k e - d i r e c t o r y SP ~ / j u n k

2. C-x C-f ~ / j u n k / h e l l o . c

3. M-x c o m p i l e Backspace Backspace Backspace Backspace Backspace Backspace Backspace g c c SP h e l l o . c SP -o SP h e l l o

4. C-x b hello.out ENTER
   C-u M-! ~ / j u n k / h e l l o
   C-x h M-w
   C-x b k e y 1 . t x t
   C-y

#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}


1.6
---

1. C-x b * s c r a t c h *
2. ( r a n d o m " 4 0 4 - 9 3 7 - 2 0 1 " ) C-j
   C-SP C-p M-w
   C-x b k e y 1 . t x t
   C-y
   
   -1765051329924258226

3. C-x b * s c r a t c h *
   ( s e t q SP x SP ( r a n d o m ) ) C-j     Result: -1845153572553134802
   ( s e t q SP x SP ( r a n d o m ) ) C-j     Result: 1491482460162699109
   
4. ( * SP x SP y ) C-j			       Result: 1217914469107467558

   The answer is off by many orders of magnitude, and is also the wrong sign.

5. M-: ( * SP x SP y ) Enter

   The answer in decimal is accompanied by its equivalents in octal and hexadecimal.

6. They are not random, because they are generated based on an algorithm and a seed,
   and are thus predictable if the algorithm is known. Also, the numbers are limited
   in size by the integer limit of Elisp.

7. The range of values of a signed Elisp integer would be -2^62 to 2^62 - 1. Two numbers
   in this range would have to result in a product that is either greater than 2^62 - 1
   or smaller than -2^62.

   If the first number is 1, then there is a 100% chance that the product will fall
   within the range.

   If the first number is 2, then there is a 50% chance that the product will fall
   within the range.

   If the first number is 3, then there is a ~33% chace that the product will fall
   within the range.

   Following this trend, we can find that if the first number is 2^62 - 1, there is
   a 1/(2^62 - 1) chance that the product will fall within the range.

   The same can be calculated in the negative direction.

   So, since there is a 1/(2^62 - 1) chance of the first number being 1 and a 1/1
   chance of the product being within the range, we can calculate that the chances
   of the product being in the range are:

   1/(2^62 - 1) * 1 + 1/(2^62 - 1) * 1/2 + 1/(2^62 - 1) * 1/3 ... + 1/(2^62 - 1) * 1/(2^62 - 1).


   This can be simplified to 1/(2^62 - 1) * (1 + 1/2 + 1/3 + ... + 1/(2^62 - 1)), which is approx.
   1.0287e-18. Since we are trying to find the chance that it will overflow, we take 1 minus this
   value, which leaves us with about a 99.999% chance that the product will be outside the range.

   FINAL ANSWER: 99.999%
   
