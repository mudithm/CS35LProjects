Name:  Mudith Mallajosyula
UID:   404937201
Lab    2

---


1. The network would still be secure even if the other teams were monitoring
every byte that was sent across the network. Each beaglebone sent its public key
to the other using the ssh-copy-id command, and from then on all communications
between the two were encrypted by the asymmetric RSA keys. The other teams might
be able to copy the public key of each beaglebone, but since it is impossible to
find the private key from the public key, they would not be able to decrypt the
data, and the communications will remain secure.

If the other teams had access to our keyboard data during LATER operation, they
would still not be able to decrypt our communications, because we would no
longer be typing our passwords and they would still not have access to our
private keys.

If they had access to the drive the system was on, however, they would be able
to access the private key, and the communications would no longer be secure.

2. the gpg2 --verify command only verifies that the decrypted signature matches
the decrypted data (generated by the public key). If the data is intercepted and
modified, it could be reencrypted and given a new signature with another public
key, and the gpg2 --verify command will still return a positive verification.

The way we currently deal with this problem, and the only way that works with
this method, is to have a list of trusted certificate autorities to provide signatures.

These signatures would have to include the author and the original file, and you
would have to trust that their private keys are secure. If you take that as
given, then you will always be able to tell whether a file has been modified by
comparing it with this certificate.
